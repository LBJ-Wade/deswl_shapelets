#!/usr/bin/env python
"""
    %prog [options]

One of the following
    multishear-run -r merun -i coadd_id
    multishear-run -r merun -t tilename

tilename is sufficient because merun implies a dataset and band.  There are
also long versions of each switch.

sending tilename instead of coadd_id will be slower since the data are
keyed by id.
"""

import sys
from sys import stdout,stderr
import deswl

from optparse import OptionParser
parser = OptionParser(__doc__)

parser.add_option("-r","--merun",default="", help="multi-epoch run")
parser.add_option("-i","--id",default=None, help="coadd file id")
parser.add_option("-t","--tile",default="", help="tile name")

parser.add_option("-o","--outdir",default=None, 
    help="output dir. Defaults to '.' when running by dataset or the "
         "'usual' place when merun is sent")

parser.add_option("--nodots", action='store_true', default=False,
    help="Don't print progress dots.")
parser.add_option("--debug", default=0,
    help="Debug verbosity level. 0:none 1:dbg 2:xdbg. Default %default")

def procopts_merun(options):
    conf={}

    rc=deswl.files.Runconfig(options.merun)
    rc.verify()

    # we need either id or tile sent
    if options.id:
        ci=deswl.files.coadd_info_select(rc['dataset'],rc['band'],
                                         ids=options.id)
    elif options.tile:
        ci=deswl.files.coadd_info_select(rc['dataset'],rc['band'],
                                         tiles=options.tile)
    else:
        parser.print_help()
        sys.exit(45)

    conf['dataset'] = rc['dataset']
    conf['wlconfig'] = rc['wl_config']
    conf['merun'] = options.merun

    return conf, ci

def procopts(options):
    conf, ci = procopts_merun(options)

    conf['tilename']  = ci['tilename']
    conf['band']      = ci['band']
    conf['image_id']  = ci['image_id']
    conf['cat_id']    = ci['cat_id']
    conf['coadd_run'] = ci['run']
    conf['image_url'] = ci['image_url']
    conf['cat_url']   = ci['cat_url']

    return conf

def add_environ(conf):
    e=deswl.files.get_proc_environ()
    for k in e:
        conf[k] = e[k]

def add_outputs(conf, outdir=None):
    merun=conf.get('merun',None)
    fdict=deswl.files.generate_me_filenames(conf['tilename'], conf['band'],
                                            merun=merun, dir=outdir)

def main():
    options, args = parser.parse_args(sys.argv[1:])

    conf=procopts(options)
    add_environ(conf)
    add_outputs(conf, outdir=options.outdir)

    ctp = deswl.wlpipe.CoaddTileProcessor(conf)
    print ctp
    print ctp.get_command()
    #ctp.run()

main()
