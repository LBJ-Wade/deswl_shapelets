#!/usr/bin/env python
"""
    %prog exposurename [ ccd ]

Run an exposure through the weak lensing code. If ccd is not sent, process all
ccds in the exposure.
"""

import sys
from sys import stdout,stderr
import deswl

from optparse import OptionParser
parser = OptionParser(__doc__)

parser.add_option("--serun", default=None,
    help="The run identifier. If sent a runconfig is "
         "read and verified against current settings. The outdir will be "
         "set to the usual place (see below)")

parser.add_option("-c","--config", default=None,
                  help="Where the wl.config is located")

#parser.add_option("--dataset", default=None,
#                  help="dataset. e.g. 'dc4'")

parser.add_option("--outdir", default=None,
                  help="Where to place the output file. Default "
                       " is '.' if the serun is not sent,"
                       " but if serun is sent it will be"
                       " $DESDATA/wlbnl/{serun}/exposurename")
parser.add_option("--rootdir", default=None,
    help="Specify the data root directory. Default $DESDATA")
parser.add_option("--copyroot", action='store_true', default=False,
    help="Copy output files to the default path under $DESDATA")
#parser.add_option("--cleanup", action='store_true', default=False,
# help="If copyroot and cleanup then the local copy of each output is deleted.")

#parser.add_option("--nodots", action='store_true', default=False,
# help="Don't print progress dots.")

parser.add_option("-t","--types",default="stars,psf,shear,split",
                  help="Comma separated list indicating which"
                       " types of processing to perform.  Default %default")

#parser.add_option("--writelog", action='store_true', default=False,
# help="Write QS/STATUS messages to a QA log file")


#parser.add_option("--debug", default=0,
#    help="Debug verbosity level. 0:none 1:dbg 2:xdbg. Default %default")

options, args = parser.parse_args(sys.argv[1:])

if len(args) < 1:
    parser.print_help()
    sys.exit(45)

exposurename=args[0]

if len(args) > 1:
    ccd=int(args[1])
else:
    ccd=None

types = options.types
serun=options.serun
outdir = options.outdir
rootdir = options.rootdir
copyroot=options.copyroot
config_file=options.config
types = types.split(',')

#cleanup=options.cleanup
#dataset=options.dataset
#nodots=options.nodots
#writelog=options.writelog
#debug=options.debug


ep = deswl.wlpipe.ExposureProcessor(exposurename,
                                    serun=serun,
                                    config=config_file,
                                    outdir=outdir,
                                    copyroot=copyroot,
                                    rootdir=rootdir)

if ccd is None:
    ep.process_ccds(types=types)
else:
    ep.process_ccd(ccd, types=types)


junk="""
deswl.wlpipe.run_shear(exposurename, ccd, 
                       types=types,
                       config_file=config_file,
                       serun=serun,
                       outdir=outdir, 
                       rootdir=rootdir,
                       copyroot=copyroot,
                       cleanup=cleanup,
                       dataset=dataset,
                       writelog=writelog,
                       debug=debug,
                       nodots=nodots)
"""
