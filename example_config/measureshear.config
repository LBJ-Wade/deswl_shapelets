
# Debugging parameters:
#
# verbose = 0 means no debug output, 1 = some, 2 = all
# If debug_file is set, that file is used for output, else std::cout is used.
# You may instead specify debug_ext which will use root.debug_ext as the 
# debug file.
# If output_dots is set, it will output status dotsas the calculation proceeds.
# If timing is set, it will output information about the calculation time.

verbose	= 1
#debug_file = measureshear.debug
#debug_ext = sheardebug
#output_dots = 1
#timing = 1

# For parallel compilations set the number of threads to be different than
# the default value openmp chooses.
# This isn't working yet, though I don't understand why.
#num_threads = 1


# Filename parameters:
#
# The filenames are all assumed to all be of the form root.ext
# where root is the same for all of them, but ext changes.
# root is typically given on the command line or formed from 
# a list of file names.
# The extensions are given here:
# 
# The input fits file is root.fits_ext
# The input catalog is root.incat_ext
# The undistortion file is root.dist_ext
# The output catalog is root.outcat_ext
# The fitted psf file is root.fitpsf_ext

#root = [Usually given on the command line]
fits_ext = fits
incat_ext = pcatE
dist_ext = undfunc2
outcat_ext = shear
fitpsf_ext = fitpsf


# Noise parameters:
#
# The allowed methods for calculating the noise in the image are:
# VALUE, CATALOG, CATALOG_SIGMA, GAIN_VALUE, GAIN_FITS, WEIGHTIMAGE
#
noise_method = GAIN_FITS
#
# If noise_method == VALUE:
# Then the noise is given here as a fixed value for all pixels:
#
#noise = 1.e3
#
# If noise_method == CATALOG:
# Then the noise value is read in from the input catalog.
#
#i_noise = 16
#
# If noise_method == CATALOG_SIGMA:
# Then the value sigma is read in from the input catalog.
# The variance is sigma*sigma
#
#i_noise = 16
#
# If noise_method == GAIN_VALUE:
# Then the noise is calculated from assuming Poisson statistics, and
# the gain and read noise values, which should be given here.
# noise_variance = (I(i,j)+extra_sky)/gain+readnoise
# where extrasky, if given here, is the sky value that was subtracted
# from the image intensities in processing.
# (If the sky has not been subtracted, leave extrasky 0 or undefined.)
#
#gain = 1.
#readnoise = 0.
#extra_sky = 1.e4
#
# If noise_method == GAIN_FITS:
# Then the noise is calculated as above, but the values for gain and readnoise
# are read in from the fits file.
# The values gain_key and readnoise_key give the keys for these values 
# in the fits file.  More than one may be given, in which case, each will
# be tried until one is successful.
#
gain_key = GAIN  ARCONG
readnoise_key = RDNOISE  RON  ARCONRN
#
# If noise_method == WEIGHTIMAGE:
# Then the noise is read in from a weight image file.
# The weight file gives the inverse noise for each pixel.
# It is taken to have the same name as the input fitsfile, but with
# (possibly) a different extension, given by weightext.
# You may also specify an HDU to use if necessary with weighthdu
#
#weight_ext = fits
#weight_hdu = 2


# Input catalog parameters:
# The position of each parameter in the input catalog is given by i_???
# So i_x = 3 means the third item in each row is x.
# The required values are i_x, i_y
# The optional values are i_errcode, i_sky, i_noise
i_x = 2
i_y = 3
i_sky = 6
i_errcode = 14
i_noise = 16    # in my case, this is sigsky

# Shear parameters:
 
# gal_aperture = How many sigma to use for the aperture
gal_aperture = 3.
# max_aperture = The maximum size of the aperture in arcsec
max_aperture = 10.
# gal_order = The order of the shapelet decomposition to be measured
gal_order = 6
# gal_order2 = The order of the shapelet decomposition to use for the shear 
#              measurement
gal_order2 = 2
# min_gal_size = The minimum galaxy size to bother trying to measure the 
#                shear for.  Measured in multiples of the PSF size.
min_gal_size = 1.0
# f_psf = A parameter determining the sigma of the shapelet decomposition
#         sigma^2_obs = sigma^2_gal + f_psf sigma^2_psf
#         So far, only f_psf = 1 has been tested.
f_psf = 1.0

