# This file has changes for processing on desdm finalcut data.
# Use this file with the wl.config file  
#
# e.g.
# measureshear $(INSTALL_DIR)/etc/wl.config +$(INSTALL_DIR)/etc/wl_finalcut.config
#
# This will read the base wl.config file first, and then read this file.
# Anything set in this file would then supersede the values set by the 
# first configuration file.



# Abort the process when write errors are encountered rather than 
# merely indicate that the output is probably unusable.
write_error_status = 5

# Change the number of threads the code tries to use.  (Default is all CPUs.)
#omp_num_threads = 1

# Update some relevant parameters for the star-galaxy separtion.
stars_minsgfrac =	0.02	# The min frac of initial stars to use sg cut
stars_minsgmag =        10      # The min mag for initial selection
stars_maxsgmag =        15      # The max mag for initial selection
stars_minmag =		10	# The min magnitude to consider
stars_maxmag =		17	# The max magnitude to consider
stars_maxoutmag =	16	# The max magnitude to include in output

# Use less memory for the multishear stage.
# The code is more efficient when it can use more memory, so it is 
# generally best to maximize this number such that it doesn't overflow the 
# available memory (leading to heavy swaps to disk).
# Default is 30, which for g and r usually fits into a machine with 16 GB
# memory.  But for i and z, this will require more memory (because there
# are more epochs per galaxy).  So this number might need to be lowered.
multishear_section_size = 20.

# In addition to the above parameter, there is another guard against 
# using too much memory.  You can set the maximum amount of virtual
# memory (in GBytes) you want the code to use.  This isn't a hard maximum, 
# since the code only checks periodically how much memory it is actually 
# using, so it will go a bit over before it notices passing the limit.  
# So you should set this to 1 or 2 below the actual amount of memory the
# system has.  (Definitely 2 if the system doesn't have a swap disk
# like lonestar.)
max_vmem = 30

# If the program does go over the above memory usage, then it splits up the 
# current section into four quadrants and tries again.  This should be used 
# as a rare safeguard, since it is inefficient to abort the work done so far 
# in the section, so it it is happening on every file (or most), then you are 
# better off lowering multishear_section_size instead.  So you can limit
# how many resplits are done with the next parameter.  If it happens
# more than a couple times in a single file, then it will probably 
# keep happening on other files, which you should avoid.  So this next
# parameter sets the maximum number of resplits allowed.
multishear_max_resplits = 3

