# vim: set filetype=python :

import os

Import('env')

libwl_files="""Bounds.cpp Legendre2D.cpp NLSolver.cpp Image.cpp Ellipse.cpp
BVec.cpp EllipseSolver.cpp PsiHelper.cpp Pixel.cpp Transformation.cpp
ConfigFile.cpp FittedPSF.cpp CrudeMeasure.cpp ReadCatalog.cpp DoMeasurePSF.cpp
DoMeasureShear.cpp SingleShear.cpp SinglePSF.cpp NLSolver.cpp Log.cpp
FitsFile.cpp Form.h PotentialStar.h Histogram.cpp StarFinder.cpp""".split()


# Library file containing generic code
libwl = env.Library('#lib/wl',libwl_files)

sblibs=['tmv_symband','tmv','cfitsio'] + env['_extralibs']
measurepsf = env.Program('measurepsf', 'MeasurePSF.cpp', 
                         LIBS=['wl'] + sblibs)
measureshear = env.Program('measureshear', 'MeasureShear.cpp', 
                           LIBS=['wl'] + sblibs)

find_stars = env.Program('find_stars', 'FindStars.cpp', 
                            LIBS=['wl'] + sblibs)

#testwl = env.Program('testwl', 'TestWL.cpp', LIBS=['wl'] + sblibs )
#testnl = env.Program('testnl', 'TestNL.cpp', LIBS=['wl'] + sblibs)

bin_install_dir = os.path.join(env['PREFIX'], 'bin')

bin_targets = [measurepsf, measureshear, find_stars]

if 'install' in COMMAND_LINE_TARGETS:
    env.Alias(target='install',
              source=env.Install(dir=bin_install_dir, source=bin_targets))


if 'uninstall' in COMMAND_LINE_TARGETS:
    # There is no env.Uninstall method, we must build our own
    deltarget = Delete("$TARGET")

    # delete from $prefix/bin/
    binfiles = [os.path.join(bin_install_dir, os.path.basename(str(f[0]))) for f in bin_targets]

    for f in binfiles:
        env.Alias('uninstall', env.Command(f, None, deltarget))

